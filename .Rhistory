}
regdata <- dplyr::select(regdata,-ends_with(del_col))
}
fml <- paste('fml <- cbind(',paste(colnames(t(ans$Y)),collapse = ','),')~.',sep = '')
fml
eval(parse(text = fml))
fit_rf[[i]] <- randomForestSRC::rfsrc(fml, data = regdata)
View(fit_rf)
load_all()
load_all()
fit_rf <- VARrf(data = sim_dt, pmax = 5)
View(fit_rf)
fit_rf <- VARrf(data = sim_dt, pmax = 5)
View(fit_rf)
l
load_all()
fit_rf <- VARrf(data = sim_dt, pmax = 5)
load_all()
fit_rf <- VARrf(data = sim_dt, pmax = 5)
View(fit_rf)
fit_rf <- VARrf(data = sim_dt, pmax = 5, s= 2)
View(fit_rf)
s = 2
irf_med <- VARrf(data = sim_dt, pmax = 5, s = s)
?predict
p_load(tsDyn,vars,randomForestSRC,bvartools,MyFun,tidyverse,devtools)
?predict
?randomForestSRC
fit_med <- VARrf(data = sim_dt, pmax = 5, s = s)
fit <- VARrf(data = sim_dt, pmax = 5, s = s)
fit$fit_rf$xvar
View(fit)
innov <- fit$fit_rf$xvar
View(innov)
dplyr::select(innov,ends_with('.2'))
dplyr::select(innov,ends_with('.2'))[,shockvar]
shockvar <- 1
dplyr::select(innov,ends_with('.2'))[,shockvar]
?dplyr::select
innov <- innov[nrow(innov),]
paste('.', as.character(s), sep = '')
i = 3
s = 3
shockvar <- 1
fit <- VARrf(data = sim_dt, pmax = 5, s = s)
innov <- fit$fit_rf$xvar
innov
s = 4
fit <- VARrf(data = sim_dt, pmax = 6, s = s)
innov <- fit$fit_rf$xvar
View(innov)
fit$fit_rf$yvar
innov <- innov[nrow(innov),]
names(innov)
str_split_fixed(names(innov),'\\.',2)
str_split_fixed(names(innov),'\\.',2)[,1]
unique(str_split_fixed(names(innov),'\\.',2)[,1])
names(fit$fit_rf$yvar)
paste(names(fit$fit_rf$yvar)[shockvar],'.', as.character(s), sep = '')
# shock var
paste(names(fit$fit_rf$yvar)[shockvar],'.', as.character(s), sep = '')
innov[,shockvar]
innov[,shockvar] <- 0
bench <- innov[,shockvar] <- 0
innov[,shockvar] <- 0
innov[,shockvar] <- 1
predict(fit$fit_rf, newdata = bench)
innov[,shockvar] <- 0
bench <- innov
predict(fit$fit_rf, newdata = bench)
pre <- predict(fit$fit_rf, newdata = bench)
View(pre)
fit$fit_rf$yvar
predict(fit$fit_rf, newdata = bench)[['regrOutput']]
predict(fit$fit_rf, newdata = bench)[['regrOutput']][[shockvar]]
predict(fit$fit_rf, newdata = bench)[['regrOutput']][[shockvar]][['predicted']]
pre_innov <- predict(fit$fit_rf, newdata = innov)[['regrOutput']][[shockvar]][['predicted']]
pre_bench <- predict(fit$fit_rf, newdata = bench)[['regrOutput']][[shockvar]][['predicted']]
pre_innov
View(bench)
View(innov)
innov[,shockvar] <- 1
View(innov)
pre_innov <- predict(fit$fit_rf, newdata = innov)[['regrOutput']][[shockvar]][['predicted']]
pre_innov
# get yvar and shock var
yvar <- names(fit$fit_rf$yvar)[shockvar]
yvar
# get yvar and shock var
yvar <- names(fit$fit_rf$yvar)
yvar
yvar[shockvar]
matrix(NA, nrow = s, ncol = 1 + length(yvar))
irf <- matrix(NA, nrow = s, ncol = 1 + length(yvar)) %>% as.data.frame()
names(irf) <- c('s',yvar)
irf
yvar
i <- 'y1'
irf[irf$s == s, i]
irf[irf$s == s, ]
j <- 4
irf[irf$s == j, i]
irf[irf$s == j, ]
s = 24
shockvar <- 1
pmax = 6
j <- 4
fit <- VARrf(data = sim_dt, pmax = pmax, s = j)
innov <- fit$fit_rf$xvar
innov <- innov[nrow(innov),]
# get yvar and shock var
yvar <- names(fit$fit_rf$yvar)
irf <- matrix(NA, nrow = s, ncol = 1 + length(yvar)) %>% as.data.frame()
irf$s <- 1:s
names(irf) <- c('s',yvar)
shockvar <- paste(yvar[shockvar],'.', as.character(s), sep = '')
# get d_i
innov[,shockvar] <- 0
bench <- innov
innov[,shockvar] <- 1
View(irf)
s = 24
shockvar <- 1
pmax = 6
j <- 4
fit <- VARrf(data = sim_dt, pmax = pmax, s = j)
innov <- fit$fit_rf$xvar
innov <- innov[nrow(innov),]
# get yvar and shock var
yvar <- names(fit$fit_rf$yvar)
irf <- matrix(NA, nrow = s, ncol = 1 + length(yvar)) %>% as.data.frame()
View(irf)
names(irf) <- c('s',yvar)
irf$s <- 1:s
shockvar <- paste(yvar[shockvar],'.', as.character(s), sep = '')
# get d_i
innov[,shockvar] <- 0
bench <- innov
innov[,shockvar] <- 1
irf[irf$s == j, i]
predict(fit$fit_rf, newdata = bench)[['regrOutput']][[i]][['predicted']]
s = 24
shockvar <- 1
pmax = 6
j <- 4
fit <- VARrf(data = sim_dt, pmax = pmax, s = j)
innov <- fit$fit_rf$xvar
innov <- innov[nrow(innov),]
# get yvar and shock var
yvar <- names(fit$fit_rf$yvar)
irf_bench <- matrix(NA, nrow = s, ncol = 1 + length(yvar)) %>% as.data.frame()
names(irf_bench) <- c('s',yvar)
irf_bench$s <- 1:s
irf_innov <- irf_bench
View(irf_bench)
source('E:/17_HuaDong/reserch/VAR_RandomRorest/VARrsf/data-raw/IRF_rf.R', echo=TRUE)
View(irf_innov)
View(bench)
View(innov)
shockvar <- paste(yvar[shockvar],'.', as.character(j), sep = '')
shockvar
source('E:/17_HuaDong/reserch/VAR_RandomRorest/VARrsf/data-raw/IRF_rf.R', echo=TRUE)
View(bench)
View(innov)
for (j in 1:s){
fit <- VARrf(data = sim_dt, pmax = pmax, s = j)
innov <- fit$fit_rf$xvar
innov <- innov[nrow(innov),]
# get yvar and shock var
yvar <- names(fit$fit_rf$yvar)
irf_bench <- matrix(NA, nrow = s, ncol = 1 + length(yvar)) %>% as.data.frame()
names(irf_bench) <- c('s',yvar)
irf_bench$s <- 1:s
irf_innov <- irf_bench
shockvar <- paste(yvar[shockvar],'.', as.character(j), sep = '')
# get d_i
innov[,shockvar] <- 0
bench <- innov
innov[,shockvar] <- 1
# E[y|d_i=1] - E[y_i|d_i=0]
for (i in yvar) {
irf_bench[irf_bench$s == j, i] <-
predict(fit$fit_rf, newdata = bench)[['regrOutput']][[i]][['predicted']]
irf_innov[irf_innov$s == j, i] <-
predict(fit$fit_rf, newdata = innov)[['regrOutput']][[i]][['predicted']]
}
}
View(irf_bench)
rm(list = ls())
library(pacman)
p_load(tsDyn,vars,randomForestSRC,bvartools,MyFun,tidyverse,devtools)
load_all()
seed <- 1024
# 参数矩阵，第一列截距，第二列趋势项
B1 <- matrix(c(0.2, 0.1, 0.2, 0.3,0.3,0.4,0.2,0.1), 2)
sim_dt <- VAR.sim(B1, n = 200, lag = 2,include = 'none',show.parMat = T) %>%
as.data.frame()
colnames(sim_dt) <- c('y1','y2')
data = sim_dt
pmax = 5
s = 24
shockvar <- 1
pmax = 6
# initialize, and get yvar and shock var
fit <- VARrf(data = sim_dt, pmax = pmax, s = j)
# initialize, and get yvar and shock var
fit <- VARrf(data = sim_dt, pmax = pmax, s = 1)
yvar <- names(fit$fit_rf$yvar)
irf_bench <- matrix(NA, nrow = s, ncol = 1 + length(yvar)) %>% as.data.frame()
names(irf_bench) <- c('s',yvar)
irf_bench$s <- 1:s
irf_innov <- irf_bench
View(irf_bench)
View(irf_innov)
shockvar <- paste(yvar[shockvar],'.', as.character(j), sep = '')
for (j in 1:s){
shockvar <- paste(yvar[shockvar],'.', as.character(j), sep = '')
fit <- VARrf(data = sim_dt, pmax = pmax, s = j)
innov <- fit$fit_rf$xvar
innov <- innov[nrow(innov),]
# get d_i
innov[,shockvar] <- 0
bench <- innov
innov[,shockvar] <- 1
# E[y|d_i=1] - E[y_i|d_i=0]
for (i in yvar) {
irf_bench[irf_bench$s == j, i] <-
predict(fit$fit_rf, newdata = bench)[['regrOutput']][[i]][['predicted']]
irf_innov[irf_innov$s == j, i] <-
predict(fit$fit_rf, newdata = innov)[['regrOutput']][[i]][['predicted']]
}
}
View(irf_bench)
View(irf_innov)
View(innov)
View(bench)
paste(yvar[shockvar],'.', as.character(j), sep = '')
source('E:/17_HuaDong/reserch/VAR_RandomRorest/VARrsf/data-raw/IRF_rf.R', echo=TRUE)
View(irf_innov)
irf_diff <- irf_bench
irf_diff[,-1] <- irf_innov[,-1] - irf_bench[,-1]
View(irf_diff)
View(fit)
source('E:/17_HuaDong/reserch/VAR_RandomRorest/VARrsf/data-raw/IRF_rf.R', echo=TRUE)
plot(irf_diff$y1)
?plot
plot(irf_diff$y1, type = 'l')
source('E:/17_HuaDong/reserch/VAR_RandomRorest/VARrsf/data-raw/IRF_rf.R', echo=TRUE)
plot(irf_diff$y1, type = 'l')
p_load(tsDyn,vars,randomForestSRC,bvartools,MyFun,tidyverse,devtools,
parallel,doParallel)
plot(irf_diff$y1, type = 'p')
s = 16
j = 16
shockvar_med <- paste(yvar[shockvar],'.', as.character(j), sep = '')
shockvar_med
fit <- VARrf(data = sim_dt, pmax = pmax, s = j)
View(fit)
innov <- fit$fit_rf$xvar
innov <- innov[nrow(innov),]
# get d_i
innov[,shockvar_med] <- 0
bench <- innov
innov[,shockvar_med] <- 1
# E[y|d_i=1] - E[y_i|d_i=0]
for (i in yvar) {
irf_bench[irf_bench$s == j, i] <-
predict(fit$fit_rf, newdata = bench)[['regrOutput']][[i]][['predicted']]
irf_innov[irf_innov$s == j, i] <-
predict(fit$fit_rf, newdata = innov)[['regrOutput']][[i]][['predicted']]
irf_diff[irf_innov$s == j, i] <- irf_innov[irf_innov$s == j, i] - irf_bench[irf_innov$s == j, i]
}
j = 15
shockvar_med <- paste(yvar[shockvar],'.', as.character(j), sep = '')
fit <- VARrf(data = sim_dt, pmax = pmax, s = j)
View(fit)
# initialize, and get yvar and shock var
fit <- VARrf(data = sim_dt, pmax = pmax) # just for yvar
View(fit)
load_all()
for (j in 1:s){
shockvar_med <- paste(yvar[shockvar],'.', as.character(j), sep = '')
fit <- VARrf(data = sim_dt, pmax = 2,p =2, s = j)
innov <- fit$fit_rf$xvar
innov <- innov[nrow(innov),]
# get d_i
innov[,shockvar_med] <- 0
bench <- innov
innov[,shockvar_med] <- 1
# E[y|d_i=1] - E[y_i|d_i=0]
for (i in yvar) {
irf_bench[irf_bench$s == j, i] <-
predict(fit$fit_rf, newdata = bench)[['regrOutput']][[i]][['predicted']]
irf_innov[irf_innov$s == j, i] <-
predict(fit$fit_rf, newdata = innov)[['regrOutput']][[i]][['predicted']]
irf_diff[irf_innov$s == j, i] <- irf_innov[irf_innov$s == j, i] - irf_bench[irf_innov$s == j, i]
}
}
View(irf_diff)
View(fit)
View(fit)
fit <- VARrf(data = sim_dt, pmax = 2,p =2, s = j)
View(fit)
load_all()
fit <- VARrf(data = sim_dt, pmax = 2,p =2, s = j)
View(fit)
is.null(s)
fit <- VARrf(data = sim_dt, pmax = 2,p =3, s = j)
fit <- VARrf(data = sim_dt, pmax = 3,p =3, s = j)
View(fit)
View(fit)
load_all()
fit <- VARrf(data = sim_dt, pmax = 3,p =3, s = j)
View(fit)
source('E:/17_HuaDong/reserch/VAR_RandomRorest/VARrsf/data-raw/IRF_rf.R', echo=TRUE)
View(irf_diff)
plot(irf_diff$y1)
plot(irf_diff$y2)
View(irf_diff)
source('E:/17_HuaDong/reserch/VAR_RandomRorest/VARrsf/data-raw/IRF_rf.R', echo=TRUE)
View(irf_diff)
View(innov)
View(bench)
source('E:/17_HuaDong/reserch/VAR_RandomRorest/VARrsf/data-raw/IRF_rf.R', echo=TRUE)
View(irf_diff)
source('E:/17_HuaDong/reserch/VAR_RandomRorest/VARrsf/data-raw/IRF_rf.R', echo=TRUE)
View(irf_diff)
plot(irf_diff$y2)
load_all()
fit <- VARrf(data = sim_dt, pmax = pmax, p = p, s = j)
View(fit)
source('E:/17_HuaDong/reserch/VAR_RandomRorest/VARrsf/data-raw/IRF_rf.R', echo=TRUE)
View(irf_diff)
plot(irf_diff$y2)
plot(irf_diff$y1)
View(irf_bench)
View(irf_innov)
# initialize, and get yvar and shock var
fit <- VARrf(data = data, p = 1) # just for yvar
load_all()
IRFrf(data = sim_dt, pmax = 5, s = 36, shockvar = 1)
load_all()
IRFrf(data = sim_dt, pmax = 5, s = 36, shockvar = 1)
p_load(tsDyn,vars,randomForestSRC,bvartools,MyFun,tidyverse,devtools,
parallel,doParallel,ggplot2)
ggplot(data = picdata, aes(x = s, y = y1)) + geom_line()
# fit_rf <- VARrf(data = sim_dt, pmax = 5)
picdata <- IRFrf(data = sim_dt, pmax = 5, s = 36, shockvar = 1)
ggplot(data = picdata, aes(x = s, y = y1)) + geom_line()
ggplot(data = picdata, aes(x = s, y = y1)) + geom_line() +
geom_hline(yintercept = 0) + theme_bw()
B1
# 广义脉冲响应的比较
ar2ma(B1)
# fit_rf <- VARrf(data = sim_dt, pmax = 5)
picdata <- IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1)
ggplot(data = picdata, aes(x = s, y = y1)) + geom_line() +
geom_hline(yintercept = 0) + theme_bw()
# 广义脉冲响应的比较
ar2ma(B1)
install.packages("glmnet")
rm(list = ls())
library(pacman)
p_load(tsDyn,vars,randomForestSRC,bvartools,MyFun,tidyverse,devtools,
parallel,doParallel,ggplot2)
load_all()
seed <- 1024
# 参数矩阵，第一列截距，第二列趋势项
B1 <- matrix(c(0.2, 0.1, 0.2, 0.3,0.3,0.4,0.2,0.1), 2)
sim_dt <- VAR.sim(B1, n = 200, lag = 2,include = 'none',show.parMat = T) %>%
as.data.frame()
colnames(sim_dt) <- c('y1','y2')
# ts.plot(sim_dt)
fit <- vars::VAR(sim_dt, p = 2,type = 'none')
# summary(fit)
# fit_rf <- VARrf(data = sim_dt, pmax = 5)
picdata <- IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1)
View(picdata)
ggplot(data = picdata, aes(x = s, y = y1)) + geom_line() +
geom_hline(yintercept = 0) + theme_bw()
load_all()
picdata <- IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = 1)
IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = 1)
View(picdata)
cl <- parallel::makeCluster(ncores = ncores)
ncores = 6
cl <- parallel::makeCluster(ncores = ncores)
cl <- parallel::makeCluster(ncores)
doParallel::registerDoParallel(cl)
picdata <- foreach::foreach(i = 1:100) %dopar% {
IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = i)
}
load_all()
IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = i)
picdata <- foreach::foreach(i = 1:100) %dopar% {
IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = i)
}
picdata <- foreach::foreach(i = 1:100) %dopar% {
devtools::load_all()
IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = i)
}
parallel::stopCluster(cl)
cl <- parallel::makeCluster(ncores)
doParallel::registerDoParallel(cl)
picdata <- foreach::foreach(i = 1:100,.packages = tidyverse) %dopar% {
devtools::load_all()
IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = i)
}
picdata <- foreach::foreach(i = 1:100,.packages = 'tidyverse') %dopar% {
devtools::load_all()
IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = i)
}
rm(list = ls())
library(pacman)
p_load(tsDyn,vars,randomForestSRC,bvartools,MyFun,tidyverse,devtools,
parallel,doParallel,ggplot2)
load_all()
seed <- 1024
# 参数矩阵，第一列截距，第二列趋势项
B1 <- matrix(c(0.2, 0.1, 0.2, 0.3,0.3,0.4,0.2,0.1), 2)
sim_dt <- VAR.sim(B1, n = 200, lag = 2,include = 'none',show.parMat = T) %>%
as.data.frame()
colnames(sim_dt) <- c('y1','y2')
parallel::stopCluster(cl)
ncores = 6
cl <- parallel::makeCluster(ncores)
doParallel::registerDoParallel(cl)
picdata <- foreach::foreach(i = 1:100,.packages = 'tidyverse') %dopar% {
devtools::load_all()
IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = i)
}
IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = i)
sim_dt
picdata <- foreach::foreach(i = 1:100,.packages = 'tidyverse') %dopar% {
devtools::load_all()
IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = i)
}
?foreach
picdata <- foreach::foreach(i = 1:100,sim_dt = sim_dt,.packages = 'tidyverse') %dopar% {
devtools::load_all()
IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = i)
}
rep(sim_dt,2)
rep(sim_dt,2) %>% class()
a <- rep(sim_dt,2)
?rep
i=1
IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = i)
?list
itevar <- as.list(sim_dt)
itevar <- list(sim_dt= sim_dt)
itevar <- list(sim_dt= sim_dt) %>% rep(2)
itevar <- list(sim_dt= sim_dt) %>% rep(100)
cl <- parallel::makeCluster(ncores)
doParallel::registerDoParallel(cl)
picdata <- foreach::foreach(i = 1:100,sim_dt = itevar,.packages = 'tidyverse') %dopar% {
devtools::load_all()
IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1,histime = i)
}
picdata <- foreach::foreach(i = 1:100,itevar = itevar,.packages = 'tidyverse') %dopar% {
devtools::load_all()
IRFrf(data = itevar, pmax = 5, s = 12, shockvar = 1,histime = i)
}
picdata <- foreach::foreach(i = 1:100,itevar = itevar,.packages = 'tidyverse') %dopar% {
devtools::load_all()
IRFrf(data = itevar, pmax = 5, s = 12, shockvar = 1,histime = i)
}
View(picdata)
?magrittr
3 magrittr::`%>%` c(1)
3 %>% c(1)
3 `%>%` c(1)
load_all()
IRFrf_gen(data = sim_dt[1:10,], pmax = 5, s = 12, shockvar = 1, ncores = 7)
data = sim_dt[1:10,]
# para set up
itevar <- rep(list(data = data), nrow(data) - pmax)
load_all()
IRFrf_gen(data = sim_dt[1:10,], pmax = 5, s = 12, shockvar = 1, ncores = 7)
data = sim_dt[1:10,]
pmax = 5
s = 12
shockvar = 1
ncores = 7
# para set up
itevar <- rep(list(data = data), nrow(data) - pmax)
pmax_para <- rep(pmax,nrow(data) - pmax)
s <- rep(s,nrow(data) - pmax)
shockvar <- rep(shockvar,nrow(data) - pmax)
# initialize
cl <- parallel::makeCluster(ncores)
doParallel::registerDoParallel(cl)
# parallel compute
picdata <- foreach::foreach(i = 1:(nrow(data) - pmax),itevar = itevar,
pmax = pmax_para,s = s, shockvar = shockvar,
.packages = 'tidyverse') %dopar% {
devtools::load_all()
IRFrf(data = itevar, pmax = pmax, s = s, shockvar = shockvar,histime = i)
}
(nrow(data) - pmax)
IRFrf_gen(data = sim_dt[1:30,], pmax = 5, s = 12, shockvar = 1, ncores = 7)
IRFrf_gen(data = sim_dt[1:50,], pmax = 5, s = 12, shockvar = 1, ncores = 7)
load_all()
IRFrf_gen(data = sim_dt[1:50,], pmax = 5, s = 12, shockvar = 1, ncores = 7)
# 绘图LP
picdata <- IRFrf(data = sim_dt, pmax = 5, s = 12, shockvar = 1)
load_all()
IRFrf_gen(data = sim_dt[1:50,], pmax = 5, s = 12, shockvar = 1, ncores = 7)
library(devtools)
document()
devtools::document()
devtools::document()
